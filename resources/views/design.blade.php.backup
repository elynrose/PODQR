<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <title>T-Shirt Designer - PODQR {{ $cacheBuster ?? '' }}</title>
</head>
<body>
<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('T-Shirt Designer') }}
        </h2>
    </x-slot>

    @if(session('success'))
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            {{ session('success') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif

    @if(session('error'))
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            {{ session('error') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif

    @php
        $firstCategory = $categories->first();
        $selectedCategoryId = null; // Don't select any category initially
        $colorMap = []; // Empty color map initially
    @endphp

    @if(isset($defaultQrCode))
        <!-- Debug: QR Code found -->
        <div class="alert alert-info">
            QR Code found: ID {{ $defaultQrCode->id }}, Name: {{ $defaultQrCode->name }}, File: {{ $defaultQrCode->file_path }}
        </div>
    @else
        <!-- Debug: No QR Code -->
        <div class="alert alert-warning">
            No QR Code found. Request parameters: {{ request()->all() }}
        </div>
    @endif

    @push('styles')
    <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Pacifico|VT323|Quicksand|Inconsolata' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="{{ asset('css/font-awesome/css/font-awesome.min.css') }}">
    <link rel="stylesheet" href="{{ asset('js/colorpicker/css/bootstrap-colorpicker.min.css') }}">
    <link rel="stylesheet" href="{{ asset('css/style.min.css?v=1.1.4') }}">
    <style>
        /* Essential T-shirt designer functionality styles only */
        /* Bootstrap 5 button group fixes for designer */
        #wrap .btn-group[data-bs-toggle="buttons"] .btn input[type="radio"],
        #wrap .btn-group[data-bs-toggle="buttons"] .btn input[type="checkbox"] {
            position: absolute;
            clip: rect(0,0,0,0);
            pointer-events: none;
        }
        /* Custom button styles for designer functionality */
        #wrap .btn-default {
            background-color: #f8f9fa;
            border-color: #dee2e6;
            color: #212529;
        }
        #wrap .btn-default:hover {
            background-color: #e9ecef;
            border-color: #adb5bd;
            color: #212529;
        }
        #wrap .btn-default.active {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: white;
        }
        /* Designer modal close button styling */
        #wrap .btn-close {
            background: none;
            border: 0;
            font-size: 1.5rem;
            font-weight: 700;
            line-height: 1;
            color: #000;
            text-shadow: 0 1px 0 #fff;
            opacity: .5;
        }
        #wrap .btn-close:hover {
            opacity: .75;
        }
        
        /* Clothes type selection styling */
        #clothesTypeSelect {
            font-size: 0.9rem;
        }
        
        #clothesTypePreview .card {
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
        }
        
        #clothesTypePreview .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem;
            font-weight: 600;
        }
        
        #clothesTypePreview .card-body {
            padding: 0.75rem;
        }
        
        #previewImage {
            border: 1px solid #dee2e6;
            border-radius: 0.25rem;
        }
        
        /* Color button styling */
        .colorButton {
            width: 40px;
            height: 40px;
            border: 2px solid #dee2e6;
            margin: 2px;
            border-radius: 50%;
            position: relative;
            flex: 0 0 calc(25% - 4px) !important;
            max-width: calc(25% - 4px) !important;
        }
        
        #colorButtonGroup {
            display: flex !important;
            flex-wrap: wrap !important;
            max-width: 200px !important;
            gap: 2px;
        }
        
        .colorButton.active {
            border-color: #0d6efd;
            box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.25);
        }
        
        .colorButton:hover {
            transform: scale(1.1);
            transition: transform 0.2s ease;
        }
        
        /* Download dropdown positioning fixes */
        .div_reviewbtn .dropup {
            position: relative;
            display: inline-block;
        }
        
        .div_reviewbtn .dropdown-toggle {
            position: relative;
        }
        
        .div_reviewbtn .dropdown-menu-end {
            right: 0;
            left: auto !important;
            min-width: 150px;
            position: absolute;
            z-index: 1000;
        }
        
        /* Ensure dropdown doesn't go off-screen */
        @media (max-width: 768px) {
            .div_reviewbtn .dropdown-menu-end {
                right: auto !important;
                left: 0 !important;
            }
        }
    </style>
    @endpush

    <div id="wrap">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-2">
                    <div class="leftLayout" id="leftLayoutContainer">
                        <div>Clothes Type</div>
                        <div class="mb-3">
                            <select class="form-select" id="clothesTypeSelect">
                                <option value="">Select a clothes type...</option>
                                @foreach($categories as $category)
                                    <optgroup label="{{ $category->name }}" data-category-id="{{ $category->id }}">
                                        @foreach($clothesTypes->where('category_id', $category->id) as $clothesType)
                                            <option value="{{ $clothesType->id }}" 
                                                    data-front-image="{{ $clothesType->front_image_url }}"
                                                    data-back-image="{{ $clothesType->back_image_url }}"
                                                    data-colors="{{ json_encode($clothesType->colors) }}">
                                                {{ $clothesType->name }}
                                            </option>
                                        @endforeach
                                    </optgroup>
                                @endforeach
                            </select>
                        </div>
                        
                        <div>Shirt Size *</div>
                        <div class="mb-3">
                            <select class="form-select" id="shirtSizeSelect" required>
                                <option value="">Select a size...</option>
                                @foreach($shirtSizes as $shirtSize)
                                    <option value="{{ $shirtSize->id }}">{{ $shirtSize->name }} - {{ $shirtSize->description }}</option>
                                @endforeach
                            </select>
                        </div>
                        
                        <!-- Clothes Type Preview -->
                        <div id="clothesTypePreview" class="mb-3" style="display: none;">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">Selected Item</h6>
                                </div>
                                <div class="card-body p-2">
                                    <div class="text-center">
                                        <img id="previewImage" src="" alt="Preview" class="img-fluid" style="max-height: 150px;">
                                        <div class="mt-2">
                                            <strong id="previewName"></strong>
                                        </div>
                                        <div class="mt-1">
                                            <small class="text-muted" id="previewCategory"></small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div id="div_colors_title" style="display: none;">Color</div>
                        <div class="btn-group" data-bs-toggle="buttons" id="colorButtonGroup" style="display: none; flex-wrap: wrap; max-width: 200px;">
                            @foreach($colorMap as $color => $hex)
                                <div class="btn colorButton" style="background-color: {{ $hex }}; flex: 0 0 calc(25% - 4px); margin: 2px;">
                                    <input type="radio" name="form_shirt_color" value="{{ $color }}" autocomplete="off" data-color="{{ $color }}" />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                </div>
                            @endforeach
                        </div>
                        <div class="btn-toolbar">
                            <div class="add_image btn-group">
                                <iframe id="ifr_upload" name="ifr_upload" height="0" width="0" frameborder="0"></iframe>
                                <form id="frm_upload" action="" method="post" enctype="multipart/form-data" target="ifr_upload">
                                <label class="btn btn-default btn-file">
                                    <i class="fa fa-picture-o"></i>&nbsp;&nbsp;Photo<input type="file" name="image_upload" accept=".gif,.jpg,.jpeg,.png,.ico">
                                </label>
                                </form>
                            </div>
                            <div class="add_text">
                                <button type="button" class="btn btn-default btn-block" id="btn_addtext"><i class="fa fa-font"></i>&nbsp;&nbsp;Add text</button>
                            </div>
<!--<div class="add_qr btn-group">
                                <button type="button" class="btn btn-default" data-bs-toggle="modal" data-bs-target="#qrModal"><i class="fa fa-qrcode"></i>&nbsp;&nbsp;QR Code</button>
                            </div>
                            <div class="add_album btn-group">
                                <button type="button" class="btn btn-default" data-bs-toggle="modal" data-bs-target="#albumModal"><i class="fa fa-th"></i>&nbsp;&nbsp;Album</button>
                            </div>-->
                        </div>
                        <div class="message">
                        </div>
                    </div>
                </div>	
                <!-- center column -->
                <div class="col-md-8">
                    <div class="centerLayout" id="centerLayoutContainer">
                        <div class="shirt"><img src="{{ asset('images/shirts/men1_blue_front.png') }}" id="img_shirt" /></div>
                        <div class="cvtoolbox">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default" id="toolbox_centerh"><i class="fa fa-arrows-h fa-lg"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_up"><i class="fa fa-arrow-up"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_centerv"><i class="fa fa-arrows-v fa-lg"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_flipx"><i class="fa fa-road fa-lg"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_flipy"><i class="fa fa-road fa-lg fa-rotate-90"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_remove"><i class="fa fa-trash-o fa-lg"></i></button>
                            </div>
                        </div>
                        <div class="cvtoolbox cvtoolbox_2nd">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default" id="toolbox_left"><i class="fa fa-arrow-left"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_center"><i class="fa fa-arrows fa-lg"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_right"><i class="fa fa-arrow-right"></i></button>
                                <button type="button" class="btn btn-default nobtn">&nbsp;</button>
                                <button type="button" class="btn btn-default nobtn">&nbsp;</button>
                                <button type="button" class="btn btn-default nobtn">&nbsp;</button>
                            </div>
                        </div>
                        <div class="cvtoolbox cvtoolbox_3rd">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default" id="toolbox_totop"><i class="fa fa-step-backward fa-lg fa-rotate-90"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_down"><i class="fa fa-arrow-down"></i></button>
                                <button type="button" class="btn btn-default" id="toolbox_tobottom"><i class="fa fa-step-forward fa-lg fa-rotate-90"></i></button>
                                <button type="button" class="btn btn-default nobtn">&nbsp;</button>
                                <button type="button" class="btn btn-default nobtn">&nbsp;</button>
                                <button type="button" class="btn btn-default nobtn">&nbsp;</button>
                            </div>
                        </div>
                        <div class="cvtoolbox_info"><div><span></span></div></div>
                        <div id="div_canvas_front" style="margin-top: 155px;">
                            <canvas id="mainCanvas_front" width="260" height="350" class="shirt_canvas"></canvas>
                        </div>
                        <div id="div_canvas_back" style="margin-top: 155px;">
                            <canvas id="mainCanvas_back" width="260" height="350" class="shirt_canvas"></canvas>
                        </div>
                        <div class="btn-group twosides" data-bs-toggle="buttons" id="sideButtonGroup">
                            <div class="btn active">
                                <input type="radio" name="form_shirt_side" value="front" autocomplete="off" checked />
                                <div class="sidename"><i class="fa fa-bookmark-o"></i> Front</div>
                            </div>
                            <div class="btn">
                                <input type="radio" name="form_shirt_side" value="back" autocomplete="off" />
                                <div class="sidename"><i class="fa fa-bookmark"></i> Back</div>
                            </div>
                        </div>
                        <div class="div_reviewbtn">
                            <button type="button" class="btn btn-default" data-bs-toggle="modal" data-bs-target="#reviewModal"><i class="fa fa-eye"></i> Preview</button>
                            <button type="button" class="btn btn-primary" id="btnSave"><i class="fa fa-save"></i> Save</button>
                            <div class="dropup">
                                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownDownload" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fa fa-download"></i> Download
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownDownload">
                                    <li><a class="dropdown-item" href="#" id="btnDownloadDesign">Download Design Only</a></li>
                                    <li><a class="dropdown-item" href="#" id="btnDownloadShirt">Download Shirt Design</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>	
                <!-- right column -->
                <div class="col-md-2">
                    <div class="rightLayout" id="rightLayoutContainer">
                        <div class="texttoolbox">
                        </div>
                        <div class="message">
                        </div>
                    </div>
                </div>	
            </div>
        </div>
    </div>

    <!-- Preview Modal -->
    <div id="reviewModal" class="modal fade" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <h4 class="modal-title">&nbsp;</h4>
          </div>
          <div class="modal-body">
            <div class="shirt"><img src="" /></div>
            <div class="shirtdesign"><img src="" /></div>
          </div>
        </div>
      </div>
    </div>

    <!-- Album Modal -->
    <div id="albumModal" class="modal fade" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <h4 class="modal-title">Album</h4>
          </div>
          <div class="modal-body">
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image1.png') }})"><img bgsrc="{{ asset('images/album/image1.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image2.png') }})"><img bgsrc="{{ asset('images/album/image2.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image3.png') }})"><img bgsrc="{{ asset('images/album/image3.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image4.png') }})"><img bgsrc="{{ asset('images/album/image4.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image5.png') }})"><img bgsrc="{{ asset('images/album/image5.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image6.png') }})"><img bgsrc="{{ asset('images/album/image6.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image7.png') }})"><img bgsrc="{{ asset('images/album/image7.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image8.png') }})"><img bgsrc="{{ asset('images/album/image8.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
            <a href="#" class="album-item"><div style="background-image: url({{ asset('images/album/image9.png') }})"><img bgsrc="{{ asset('images/album/image9.png') }}" src="{{ asset('images/blank.png') }}" /></div></a>
          </div>
        </div>
      </div>
    </div>

    <!-- QR Code Modal -->
    <div id="qrModal" class="modal fade" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <h4 class="modal-title">Generate QR Code</h4>
          </div>
          <div class="modal-body">
            <form id="qrForm">
                <div class="form-group mb-3">
                    <label for="qrText">QR Code Content:</label>
                    <input type="text" class="form-control" id="qrText" name="text" placeholder="Enter URL, text, or contact info..." required>
                </div>
                <div class="form-group mb-3">
                    <label for="qrSize">Size:</label>
                    <select class="form-control" id="qrSize" name="size">
                        <option value="200">Small (200px)</option>
                        <option value="300" selected>Medium (300px)</option>
                        <option value="400">Large (400px)</option>
                    </select>
                </div>
                <div class="form-group mb-3">
                    <label for="qrColor">QR Code Color:</label>
                    <input type="color" class="form-control" id="qrColor" name="color" value="#000000">
                </div>
                <div class="form-group mb-3">
                    <label for="qrBackground">Background Color:</label>
                    <input type="color" class="form-control" id="qrBackground" name="background" value="#FFFFFF">
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-primary" id="generateQrBtn">Generate QR Code</button>
                </div>
            </form>
            <div id="qrPreview" style="text-align: center; margin-top: 20px; display: none;">
                <img id="qrImage" src="" alt="Generated QR Code" style="max-width: 100%; border: 1px solid #ddd;">
                <br><br>
                <button type="button" class="btn btn-success" id="addQrToDesign">Add to Design</button>
            </div>
          </div>
        </div>
      </div>
    </div>

   

    @push('scripts')
    <!-- Load jQuery first -->
    <script type="text/javascript" src="{{ asset('js/jquery.min.js') }}"></script>
    
    <!-- Load other required scripts -->
    <script type="text/javascript" src="{{ asset('js/placeholders.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/colorpicker/js/bootstrap-colorpicker.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/fabric4.min.js?v=1.1') }}"></script>
    <script type="text/javascript" src="{{ asset('js/fontfaceobserver.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/merge-images.js') }}"></script>
    <script src="{{ asset('js/main.js?v=1.6') }}"></script>

    <script>
    // Cache busting version
    console.log('Design page script version: 1.6');
    
    $(document).ready(function() {
        // Test if all required libraries are loaded
        console.log('Design page loaded successfully!');
        console.log('jQuery version:', $.fn.jquery);
        console.log('Bootstrap version:', typeof bootstrap !== 'undefined' ? 'Bootstrap 5 Loaded' : 'Not loaded');
        console.log('Fabric.js version:', typeof fabric !== 'undefined' ? 'Loaded' : 'Not loaded');
        
        // Simple, standalone dropdown handler - completely isolated
        function setupSimpleDropdown() {
            console.log('=== SETTING UP SIMPLE DROPDOWN ===');
            
            // Remove all existing handlers
            $(document).off('change', '#clothesTypeSelect');
            $('#clothesTypeSelect').off('change');
            
            // Simple change handler
            $('#clothesTypeSelect').on('change', function() {
                console.log('=== SIMPLE DROPDOWN CHANGED ===');
                console.log('Value:', $(this).val());
                
                var selectedOption = $(this).find('option:selected');
                if (selectedOption.length > 0) {
                    var frontImage = selectedOption.data('front-image');
                    var backImage = selectedOption.data('back-image');
                    var clothesTypeName = selectedOption.text();
                    var categoryName = selectedOption.closest('optgroup').attr('label');
                    var categoryId = selectedOption.parent('optgroup').data('category-id');
                    
                    console.log('Selected:', {
                        name: clothesTypeName,
                        category: categoryName,
                        frontImage: frontImage
                    });
                    
                    // Update preview
                    $('#previewImage').attr('src', frontImage);
                    $('#previewName').text(clothesTypeName);
                    $('#previewCategory').text(categoryName);
                    $('#clothesTypePreview').show();
                    
                    // Update main shirt image
                    $('#img_shirt').attr('src', frontImage);
                    
                    // Update color buttons
                    if (typeof updateColorButtonsForCategory === 'function') {
                        updateColorButtonsForCategory(categoryId);
                    }
                    
                    // Store data
                    window.selectedClothesType = {
                        id: $(this).val(),
                        name: clothesTypeName,
                        category: categoryName,
                        frontImage: frontImage,
                        backImage: backImage
                    };
                    
                    console.log('Simple dropdown update complete');
                } else {
                    $('#clothesTypePreview').hide();
                    window.selectedClothesType = null;
                    console.log('No option selected');
                }
            });
            
            console.log('=== SIMPLE DROPDOWN SETUP COMPLETE ===');
        }
        
        // Set up the simple dropdown
        setupSimpleDropdown();
        
        // Set it up again after a delay
        setTimeout(setupSimpleDropdown, 500);
        
        // Set it up again after QR code loading
        setTimeout(setupSimpleDropdown, 3000);
        
        // Debug: Add a test button to verify dropdown functionality
        $('body').append('<button id="testDropdown" style="position: fixed; top: 10px; right: 10px; z-index: 9999; background: red; color: white; padding: 5px;">Test Dropdown</button>');
        $('#testDropdown').on('click', function() {
            console.log('=== TESTING DROPDOWN ===');
            console.log('Dropdown element:', $('#clothesTypeSelect').length);
            console.log('Current value:', $('#clothesTypeSelect').val());
            console.log('Event handlers:', $._data($('#clothesTypeSelect')[0], 'events'));
            
            // Try to trigger change manually
            $('#clothesTypeSelect').val('1').trigger('change');
        });

        // Helper: update color buttons for a given category
        function updateColorButtonsForCategory(categoryId) {
            var colorMap = window.categoryColorMap[categoryId] || {};
            var colorGroup = $('#colorButtonGroup');
            var colorTitle = $('#div_colors_title');
            
            if (Object.keys(colorMap).length > 0) {
                // Show color section
                colorTitle.show();
                colorGroup.show();
                
                colorGroup.empty();
                var first = true;
                Object.entries(colorMap).forEach(function([color, hex]) {
                    var button = $('<div class="btn colorButton" style="background-color: ' + hex + '; flex: 0 0 calc(25% - 4px); margin: 2px;">' +
                        '<input type="radio" name="form_shirt_color" value="' + color + '" autocomplete="off" data-color="' + color + '" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +
                        '</div>');
                    if (first) {
                        button.addClass('active');
                        button.find('input').prop('checked', true);
                        first = false;
                    }
                    colorGroup.append(button);
                });
                window.reattachColorButtonHandlers();
            } else {
                // Hide color section if no colors available
                colorTitle.hide();
                colorGroup.hide();
            }
        }

        // Add label-id to optgroups for category detection
        $('#clothesTypeSelect optgroup').each(function() {
            var label = $(this).attr('label');
            var category = window.categories ? window.categories.find(c => c.name === label) : null;
            if (category) {
                $(this).attr('label-id', category.id);
            }
        });

        // Make categories available to JS
        window.categories = @json($categories);
        window.categoryColorMap = @json($categoryColorMap);
        
        // Initialize Bootstrap 5 button groups
        var typeButtonGroup = document.getElementById('typeButtonGroup');
        var colorButtonGroup = document.getElementById('colorButtonGroup');
        var sideButtonGroup = document.getElementById('sideButtonGroup');
        
        if (typeButtonGroup) {
            console.log('Type button group found, initializing...');
        }
        if (colorButtonGroup) {
            console.log('Color button group found, initializing...');
        }
        if (sideButtonGroup) {
            console.log('Side button group found, initializing...');
        }
        
        // Manual event handling for type selection (Bootstrap 5 compatibility)
        $('#typeButtonGroup .btn').on('click', function(e) {
            e.preventDefault();
            console.log('Type button clicked:', $(this).find('input[type="radio"]').val());
            var radio = $(this).find('input[type="radio"]');
            radio.prop('checked', true).trigger('change');
            
            // Update active state
            $('#typeButtonGroup .btn').removeClass('active');
            $(this).addClass('active');
        });
        
        // Manual event handling for color selection (Bootstrap 5 compatibility)
        $('#colorButtonGroup .btn').on('click', function(e) {
            e.preventDefault();
            var selectedColor = $(this).find('input[type="radio"]').val();
            console.log('Color button clicked:', selectedColor);
            
            var radio = $(this).find('input[type="radio"]');
            radio.prop('checked', true).trigger('change');
            
            // Update active state
            $('#colorButtonGroup .btn').removeClass('active');
            $(this).addClass('active');
            
            // Switch to a T-shirt that has this color
            switchToClothesTypeWithColor(selectedColor);
        });
        
        // Function to switch to a clothes type that has the selected color
        function switchToClothesTypeWithColor(color) {
            // Get the currently selected clothes type
            var currentSelection = $('#clothesTypeSelect option:selected');
            var currentColors = currentSelection.data('colors');
            
            // Check if the current selection already has this color
            if (currentColors && currentColors.includes(color)) {
                // Current selection already has this color, just update the image
                var currentSide = $('input[name="form_shirt_side"]:checked').val();
                var imageUrl = currentSide === 'back' ? currentSelection.data('back-image') : currentSelection.data('front-image');
                $('#img_shirt').attr('src', imageUrl);
                console.log('Updated shirt image for color:', color, 'using current selection');
                return;
            }
            
            // If current selection doesn't have this color, find one that does
            var availableTypes = [];
            $('#clothesTypeSelect option').each(function() {
                var colors = $(this).data('colors');
                if (colors && colors.includes(color)) {
                    availableTypes.push({
                        id: $(this).val(),
                        name: $(this).text(),
                        frontImage: $(this).data('front-image'),
                        backImage: $(this).data('back-image')
                    });
                }
            });
            
            if (availableTypes.length > 0) {
                // Find a type that has this color and is in the same category as current selection
                var currentCategoryId = currentSelection.parent('optgroup').data('category-id');
                var sameCategoryType = availableTypes.find(function(type) {
                    var option = $('#clothesTypeSelect option[value="' + type.id + '"]');
                    return option.parent('optgroup').data('category-id') == currentCategoryId;
                });
                
                if (sameCategoryType) {
                    // Use a type from the same category
                    var selectedType = sameCategoryType;
                } else {
                    // Use the first available type
                    var selectedType = availableTypes[0];
                }
                
                // Update the main shirt image without changing the dropdown
                var currentSide = $('input[name="form_shirt_side"]:checked').val();
                var imageUrl = currentSide === 'back' ? selectedType.backImage : selectedType.frontImage;
                $('#img_shirt').attr('src', imageUrl);
                
                console.log('Updated shirt image for color:', color, 'using type:', selectedType.name);
            } else {
                console.log('No clothes type found with color:', color);
            }
        }
        
        // Function to reattach color button event handlers (for dynamically created buttons)
        window.reattachColorButtonHandlers = function() {
            $('#colorButtonGroup .btn').off('click').on('click', function(e) {
                e.preventDefault();
                var selectedColor = $(this).find('input[type="radio"]').val();
                console.log('Color button clicked (reattached):', selectedColor);
                
                var radio = $(this).find('input[type="radio"]');
                radio.prop('checked', true).trigger('change');
                
                // Update active state
                $('#colorButtonGroup .btn').removeClass('active');
                $(this).addClass('active');
                
                // Switch to a T-shirt that has this color
                switchToClothesTypeWithColor(selectedColor);
            });
        };
        
        // Call the function initially for any existing color buttons
        window.reattachColorButtonHandlers();
        
        // Manual event handling for side selection (Bootstrap 5 compatibility)
        $('#sideButtonGroup .btn').on('click', function(e) {
            e.preventDefault();
            console.log('Side button clicked:', $(this).find('input[type="radio"]').val());
            var radio = $(this).find('input[type="radio"]');
            radio.prop('checked', true).trigger('change');
            
            // Update active state
            $('#sideButtonGroup .btn').removeClass('active');
            $(this).addClass('active');
        });
        
        // Also listen for the radio change events directly
        $('input[name="form_shirt_type"]').on('change', function() {
            console.log('Type radio change event triggered:', this.value);
        });
        
        $('input[name="form_shirt_color"]').on('change', function() {
            console.log('Color radio change event triggered:', this.value);
        });
        
        $('input[name="form_shirt_side"]').on('change', function() {
            console.log('Side radio change event triggered:', this.value);
        });
        
        // Set CSRF token for AJAX requests
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });

        // Generate QR Code
        $('#generateQrBtn').click(function() {
            var formData = {
                text: $('#qrText').val(),
                size: $('#qrSize').val(),
                color: $('#qrColor').val(),
                background: $('#qrBackground').val()
            };

            $.ajax({
                url: '{{ route("qr-generate-data-url") }}',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        $('#qrImage').attr('src', response.data_url);
                        $('#qrPreview').show();
                    }
                },
                error: function(xhr) {
                    alert('Error generating QR code. Please try again.');
                }
            });
        });

        // Add QR Code to Design
        $('#addQrToDesign').click(function() {
            var qrDataUrl = $('#qrImage').attr('src');
            if (qrDataUrl) {
                // Clear both canvases first
                canvas_front.clear();
                canvas_back.clear();
                
                // Add QR code to both canvases
                fabric.Image.fromURL(qrDataUrl, function(oImgFront) {
                    // Add to front canvas
                    canvas_front.add(oImgFront);
                    if (oImgFront.get('width') * getZoom() > canvas_front.get('width') / 2) {
                        oImgFront.scaleToWidth(canvas_front.get('width') / 2);
                    }
                    oImgFront.viewportCenter().setCoords();
                    canvas_front.renderAll();
                    
                    // Add to back canvas
                    fabric.Image.fromURL(qrDataUrl, function(oImgBack) {
                        canvas_back.add(oImgBack);
                        if (oImgBack.get('width') * getZoom() > canvas_back.get('width') / 2) {
                            oImgBack.scaleToWidth(canvas_back.get('width') / 2);
                        }
                        oImgBack.viewportCenter().setCoords();
                        canvas_back.renderAll();
                        
                        console.log('QR code added to both canvases successfully');
                        
                        // Ensure dropdown functionality is preserved after QR code loading
                        preserveDropdownFunctionality();
                    });
                });
                
                var modal = bootstrap.Modal.getInstance(document.getElementById('qrModal'));
                modal.hide();
            }
        });

        // Handle default QR code loading
        @if($defaultQrCode)
            console.log('=== QR CODE LOADING STARTED ===');
            $(document).ready(function() {
                console.log('Document ready, starting QR code loading...');
                
                // Load the QR code as the default image
                var qrCodeUrl = '{{ Storage::url($defaultQrCode->file_path) }}';
                console.log('QR Code URL:', qrCodeUrl);
                console.log('QR Code ID:', {{ $defaultQrCode->id }});
                console.log('QR Code Name:', '{{ $defaultQrCode->name }}');
                
                // Function to check if canvas is ready and load QR code
                function checkCanvasAndLoad() {
                    console.log('=== CHECKING CANVAS READINESS ===');
                    console.log('Canvas front exists:', typeof canvas_front !== 'undefined');
                    console.log('Canvas back exists:', typeof canvas_back !== 'undefined');
                    console.log('Fabric.js available:', typeof fabric !== 'undefined');
                    
                    if (typeof canvas_front === 'undefined' || typeof canvas_back === 'undefined') {
                        console.log('Canvas not ready yet, waiting 500ms more...');
                        setTimeout(checkCanvasAndLoad, 500);
                        return;
                    }
                    
                    console.log('Canvas is ready! Loading QR code...');
                    console.log('Canvas front dimensions:', canvas_front.get('width'), 'x', canvas_front.get('height'));
                    console.log('Canvas back dimensions:', canvas_back.get('width'), 'x', canvas_back.get('height'));
                    console.log('Canvas front zoom:', getZoom());
                    console.log('Canvas front objects before loading:', canvas_front.getObjects().length);
                    
                    loadQrCodeToCanvas(qrCodeUrl);
                }
                
                // Start checking for canvas readiness
                setTimeout(checkCanvasAndLoad, 1000);
                
                function loadQrCodeToCanvas(qrCodeUrl) {
                    console.log('=== LOADING QR CODE TO CANVAS ===');
                    console.log('URL to load:', qrCodeUrl);
                    
                    // Add QR code to both canvases
                    fabric.Image.fromURL(qrCodeUrl, function(oImgFront) {
                        console.log('=== FRONT CANVAS IMAGE LOADED ===');
                        console.log('Image object:', oImgFront);
                        console.log('Image width:', oImgFront.get('width'));
                        console.log('Image height:', oImgFront.get('height'));
                        
                        // Add to front canvas
                        canvas_front.add(oImgFront);
                        if (oImgFront.get('width') * getZoom() > canvas_front.get('width') / 2) {
                            oImgFront.scaleToWidth(canvas_front.get('width') / 2);
                        }
                        oImgFront.viewportCenter().setCoords();
                        canvas_front.renderAll();
                        
                        console.log('Front canvas objects count:', canvas_front.getObjects().length);
                        
                        // Add to back canvas
                        fabric.Image.fromURL(qrCodeUrl, function(oImgBack) {
                            console.log('=== BACK CANVAS IMAGE LOADED ===');
                            canvas_back.add(oImgBack);
                            if (oImgBack.get('width') * getZoom() > canvas_back.get('width') / 2) {
                                oImgBack.scaleToWidth(canvas_back.get('width') / 2);
                            }
                            oImgBack.viewportCenter().setCoords();
                            canvas_back.renderAll();
                            
                            console.log('Back canvas objects count:', canvas_back.getObjects().length);
                            console.log('=== QR CODE LOADING COMPLETE ===');
                            
                            // Ensure dropdown functionality is preserved after QR code loading
                            preserveDropdownFunctionality();
                        });
                    }, function(error) {
                        console.error('=== ERROR LOADING QR CODE IMAGE ===');
                        console.error('Error details:', error);
                    });
                }
            });
        @endif
    });
    </script>
    @endpush
</x-app-layout> 